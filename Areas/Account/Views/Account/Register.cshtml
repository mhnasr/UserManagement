@model UserManagement.Models.RegisterViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}




<div class="container mt-5">
    <h2 class="text-center">ثبت‌نام</h2>
    <form method="post" class="needs-validation" novalidate>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="firstName" class="form-label">نام</label>
                <input type="text" class="form-control" id="firstName" name="FirstName" value="@Model.FirstName" required>
                <div class="invalid-feedback">لطفاً نام خود را وارد کنید.</div>
            </div>
            <div class="col-md-6">
                <label for="lastName" class="form-label">نام خانوادگی</label>
                <input type="text" class="form-control" id="lastName" name="LastName" value="@Model.LastName" required>
                <div class="invalid-feedback">لطفاً نام خانوادگی خود را وارد کنید.</div>
            </div>
        </div>
        <div class="mb-3">
            <label for="phoneNumber" class="form-label">شماره موبایل</label>
            <input type="text" class="form-control" id="phoneNumber" name="PhoneNumber" value="@Model.PhoneNumber" required>
            <div class="invalid-feedback">لطفاً شماره موبایل معتبر وارد کنید.</div>
        </div>
        <div class="mb-3">
    <label for="password" class="form-label">کلمه عبور</label>
    <input type="password" class="form-control" id="password" name="Password" required>
    <small class="text-muted">
        رمز عبور باید حداقل ۶ کاراکتر باشد و شامل حروف بزرگ و کوچک باشد.
    </small>
</div>
        <button type="submit" class="btn btn-primary w-100">ثبت‌نام</button>
    </form>
</div>

<script>
    (function () {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>
